// tslint:disable
/**
 * yTestbook
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI, throwIfNullOrUndefined } from '../runtime';
import type { OperationOpts, HttpHeaders } from '../runtime';
import type {
    LoginRequest,
    LoginResponse,
    TestbookRequest,
    TestbookResponse,
} from '../models';

export interface TestbookPostRequest {
    testbookRequest: TestbookRequest;
}

export interface UserLoginRequest {
    loginRequest: LoginRequest;
}

/**
 * no description
 */
export class YTestbookApi extends BaseAPI {

    /**
     */
    testbookAllGet(): Observable<Array<TestbookResponse>>
    testbookAllGet(opts?: OperationOpts): Observable<AjaxResponse<Array<TestbookResponse>>>
    testbookAllGet(opts?: OperationOpts): Observable<Array<TestbookResponse> | AjaxResponse<Array<TestbookResponse>>> {
        return this.request<Array<TestbookResponse>>({
            url: '/testbook/all',
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     */
    testbookPost({ testbookRequest }: TestbookPostRequest): Observable<TestbookResponse>
    testbookPost({ testbookRequest }: TestbookPostRequest, opts?: OperationOpts): Observable<AjaxResponse<TestbookResponse>>
    testbookPost({ testbookRequest }: TestbookPostRequest, opts?: OperationOpts): Observable<TestbookResponse | AjaxResponse<TestbookResponse>> {
        throwIfNullOrUndefined(testbookRequest, 'testbookRequest', 'testbookPost');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<TestbookResponse>({
            url: '/testbook/',
            method: 'POST',
            headers,
            body: testbookRequest,
        }, opts?.responseOpts);
    };

    /**
     */
    userLogin({ loginRequest }: UserLoginRequest): Observable<LoginResponse>
    userLogin({ loginRequest }: UserLoginRequest, opts?: OperationOpts): Observable<AjaxResponse<LoginResponse>>
    userLogin({ loginRequest }: UserLoginRequest, opts?: OperationOpts): Observable<LoginResponse | AjaxResponse<LoginResponse>> {
        throwIfNullOrUndefined(loginRequest, 'loginRequest', 'userLogin');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<LoginResponse>({
            url: '/login',
            method: 'POST',
            headers,
            body: loginRequest,
        }, opts?.responseOpts);
    };

}
